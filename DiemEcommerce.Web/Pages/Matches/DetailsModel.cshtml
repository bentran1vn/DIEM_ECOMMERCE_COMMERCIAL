@page "{id:guid}"
@model DiemEcommerce.Web.Pages.Matches.DetailsModel
@{
ViewData["Title"] = Model.Match?.Name ?? "Match Details";
}

<div class="container mx-auto py-8">
    @if (Model.Match != null)
    {
    <!-- Navigation Breadcrumb -->
    <nav class="flex mb-6 text-sm">
        <a asp-page="/Index" class="text-gray-500 hover:text-primary flex items-center">
            <svg xmlns="http://www.w3.org/2000/svg" class="w-5 h-5 mr-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" d="M9 12h6m-3-3v6m-9-6a9 9 0 1118 0 9 9 0 01-18 0z" />
            </svg>
            Home
        </a>
        <span class="mx-2 text-gray-400">/</span>
        <a asp-page="/Matches/Index" class="text-gray-500 hover:text-primary">Matches</a>
        <span class="mx-2 text-gray-400">/</span>
        <span class="text-gray-900">@Model.Match.Name</span>
    </nav>

    <div class="grid grid-cols-1 md:grid-cols-2 gap-8">
        <!-- Enhanced Match Images -->
        <div>
            @if (Model.Match.CoverImages.Any())
            {
            <div x-data="{ activeImage: '@Model.Match.CoverImages.First().Url' }">
                <div class="aspect-square overflow-hidden rounded-lg mb-4 shadow-lg">
                    <img :src="activeImage" alt="@Model.Match.Name" class="w-full h-full object-cover transform hover:scale-105 transition duration-300">
                </div>
                @if (Model.Match.CoverImages.Count() > 1)
                {
                <div class="grid grid-cols-5 gap-2">
                    @foreach (var image in Model.Match.CoverImages)
                    {
                    <button
                        @@click="activeImage = '@image.Url'"
                        class="aspect-square overflow-hidden rounded border hover:border-primary transition-all duration-300 shadow-sm"
                        :class="{'border-primary': activeImage === '@image.Url', 'border-gray-200': activeImage !== '@image.Url'}">
                        <img src="@image.Url" alt="@Model.Match.Name" class="w-full h-full object-cover rounded transition-transform transform hover:scale-105 duration-200">
                    </button>
                    }
                </div>
                }
            </div>
            }
            else
            {
            <div class="aspect-square bg-gray-200 rounded-lg flex items-center justify-center shadow-inner">
                <span class="text-gray-500">No image available</span>
            </div>
            }
        </div>

        <!-- Enhanced Match Details -->
        <div>
            <h1 class="text-3xl font-bold mb-2">@Model.Match.Name</h1>
            <div class="mb-4">
                <a asp-page="/Factories/Details" asp-route-id="@Model.Match.FactoryId" class="text-primary hover:underline">
                    @Model.Match.FactoryName
                </a>
            </div>

            <div class="text-2xl font-bold text-primary mb-6">$@Model.Match.Price</div>

            <div class="prose mb-8">
                <h3 class="text-lg font-medium mb-2">Description</h3>
                <p>@Model.Match.Description</p>
            </div>

            <!-- Stock Status Badge -->
            <div class="mb-6">
                @if (Model.Match.Quantity > 10)
                {
                <span class="inline-block px-4 py-1 text-sm font-medium bg-green-100 text-green-700 rounded-full shadow-sm">In Stock (@Model.Match.Quantity available)</span>
                }
                else if (Model.Match.Quantity > 0)
                {
                <span class="inline-block px-4 py-1 text-sm font-medium bg-yellow-100 text-yellow-700 rounded-full shadow-sm">Low Stock (Only @Model.Match.Quantity left)</span>
                }
                else
                {
                <span class="inline-block px-4 py-1 text-sm font-medium bg-red-100 text-red-700 rounded-full shadow-sm">Out of Stock</span>
                }
            </div>

            <!-- Enhanced Add to Cart Form -->
            <form method="post" class="mb-8">
                <div class="flex items-center mb-4">
                    <label for="quantity" class="mr-4 font-medium">Quantity:</label>
                    <div class="flex items-center border border-gray-300 rounded-md shadow-sm">
                        <button type="button" class="px-3 py-1 bg-gray-100 border-r border-gray-300 hover:bg-gray-200"
                                onclick="decrementQuantity()">-</button>
                        <input type="number" id="quantity" name="quantity" value="1" min="1" max="@Model.Match.Quantity"
                               class="w-16 text-center border-none focus:ring-0"
                               readonly />
                        <button type="button" class="px-3 py-1 bg-gray-100 border-l border-gray-300 hover:bg-gray-200"
                                onclick="incrementQuantity()">+</button>
                    </div>
                </div>

                <input type="hidden" name="matchId" value="@Model.Match.Id" />
                <button type="submit"
                        class="btn btn-primary w-full @(Model.Match.Quantity <= 0 ? "opacity-50 cursor-not-allowed" : "")"
                        asp-page-handler="AddToCart"
                        disabled="@(Model.Match.Quantity <= 0)">
                    @if (Model.Match.Quantity <= 0)
                    {
                        <span>Out of Stock</span>
                    }
                    else
                    {
                        <span>Add to Cart</span>
                    }
                </button>
            </form>
        </div>
    </div>

    <!-- Enhanced Factory Information Section -->
    <div class="mt-12">
        <h3 class="text-lg font-medium mb-4 flex items-center">
            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2 text-primary" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-5m-9 0H3m2 0h5M9 7h1m-1 4h1m4-4h1m-1 4h1m-5 10v-5a1 1 0 011-1h2a1 1 0 011 1v5m-4 0h4" />
            </svg>
            Factory Information
        </h3>

        <div class="bg-white rounded-lg shadow-lg overflow-hidden border border-gray-100 transition-all duration-300 hover:shadow-xl">
            <div class="p-6 flex flex-col md:flex-row items-start gap-6">
                <!-- Factory Logo Section with fallback -->
                <div class="flex-shrink-0 mb-4 md:mb-0 relative">
                    @if (!string.IsNullOrEmpty(Model.Match.FactoryLogo))
                    {
                    <div class="w-20 h-20 rounded-full border-2 border-gray-200 overflow-hidden bg-white p-1 shadow-md">
                        <img src="@Model.Match.FactoryLogo" alt="@Model.Match.FactoryName logo"
                             class="w-full h-full object-cover rounded-full transition-transform hover:scale-105 duration-300"
                             onerror="this.onerror=null; this.src='/images/default-factory-logo.png';">
                    </div>
                    }
                    else
                    {
                    <div class="w-20 h-20 rounded-full border-2 border-gray-200 bg-gray-100 flex items-center justify-center">
                        <span class="text-2xl font-bold text-gray-400">@(Model.Match.FactoryName?[0] ?? 'F')</span>
                    </div>
                    }

                    <div class="absolute -right-1 -bottom-1 bg-green-500 rounded-full w-5 h-5 border-2 border-white"
                         title="Verified Factory" aria-label="Verified Factory"></div>
                </div>

                <!-- Factory Details Section -->
                <div class="flex-1">
                    <h4 class="font-medium text-xl text-gray-900 mb-2 flex items-center">
                        @Model.Match.FactoryName
                        <span class="ml-2 px-2 py-1 bg-blue-100 text-blue-800 text-xs rounded-full">Verified</span>
                    </h4>

                    <!-- Location with icon -->
                    <div class="flex items-start mb-3">
                        <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2 text-gray-500 mt-0.5 flex-shrink-0" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z" />
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 11a3 3 0 11-6 0 3 3 0 016 0z" />
                        </svg>
                        <p class="text-sm text-gray-600">
                            @(string.IsNullOrEmpty(Model.Match.FactoryAddress) ? "Address not provided" : Model.Match.FactoryAddress)
                        </p>
                    </div>

                    <!-- Contact Information Grid -->
                    <div class="grid grid-cols-1 md:grid-cols-2 gap-3 mb-4">
                        <!-- Phone Section -->
                        <div class="flex items-center">
                            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2 text-gray-500" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 5a2 2 0 012-2h3.28a1 1 0 01.948.684l1.498 4.493a1 1 0 01-.502 1.21l-2.257 1.13a11.042 11.042 0 005.516 5.516l1.13-2.257a1 1 0 011.21-.502l4.493 1.498a1 1 0 01.684.949V19a2 2 0 01-2 2h-1C9.716 21 3 14.284 3 6V5z" />
                            </svg>
                            @if (!string.IsNullOrEmpty(Model.Match.FactoryPhoneNumber))
                            {
                            <a href="tel:@Model.Match.FactoryPhoneNumber" class="text-sm text-primary hover:underline hover:text-primary-dark transition-colors">
                                @Model.Match.FactoryPhoneNumber
                            </a>
                            }
                            else
                            {
                            <span class="text-sm text-gray-500">Phone not provided</span>
                            }
                        </div>

                        <!-- Email Section -->
                        <div class="flex items-center">
                            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2 text-gray-500" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 8l7.89 5.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z" />
                            </svg>
                            @if (!string.IsNullOrEmpty(Model.Match.FactoryEmail))
                            {
                            <a href="mailto:@Model.Match.FactoryEmail" class="text-sm text-primary hover:underline hover:text-primary-dark transition-colors">
                                @Model.Match.FactoryEmail
                            </a>
                            }
                            else
                            {
                            <span class="text-sm text-gray-500">Email not provided</span>
                            }
                        </div>

                        <!-- Website Section -->
                        <div class="flex items-center">
                            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2 text-gray-500" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 12a9 9 0 01-9 9m9-9a9 9 0 00-9-9m9 9H3m9 9a9 9 0 01-9-9m9 9c1.657 0 3-4.03 3-9s-1.343-9-3-9m0 18c-1.657 0-3-4.03-3-9s1.343-9 3-9" />
                            </svg>
                            @if (!string.IsNullOrEmpty(Model.Match.FactoryWebsite))
                            {
                            <a href="@Model.Match.FactoryWebsite" class="text-sm text-primary hover:underline hover:text-primary-dark transition-colors" target="_blank" rel="noopener noreferrer">
                                Visit Website <span class="sr-only">opens in new tab</span>
                            </a>
                            }
                            else
                            {
                            <span class="text-sm text-gray-500">Website not provided</span>
                            }
                        </div>

                        <!-- Operating Hours (new section) -->
                        <div class="flex items-center">
                            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2 text-gray-500" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z" />
                            </svg>
                            <span class="text-sm text-gray-600">Mon-Fri: 9AM-5PM</span>
                        </div>
                    </div>

                    <!-- Description Section with expandable content -->
                    @if (!string.IsNullOrEmpty(Model.Match.FactoryDescription))
                    {
                    <div class="mt-2" x-data="{ expanded: false }">
                        <div class="text-sm text-gray-700">
                            <strong class="flex items-center">
                                <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 mr-1 text-gray-500" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
                                </svg>
                                About this factory:
                            </strong>
                            <p x-show="!expanded" class="line-clamp-2">@Model.Match.FactoryDescription</p>
                            <p x-show="expanded" style="display: none;">@Model.Match.FactoryDescription</p>
                            <button
                                @@click="expanded = !expanded"
                                class="text-primary hover:text-primary-dark text-xs font-medium mt-1 focus:outline-none">
                                <span x-text="expanded ? 'Show less' : 'Show more'">Show more</span>
                            </button>
                        </div>
                    </div>
                    }

                    <!-- Factory Stats (new section) -->
                    <div class="flex flex-wrap gap-4 mt-3">
                        <div class="flex items-center">
                            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-1 text-yellow-500" fill="currentColor" viewBox="0 0 24 24">
                                <path d="M12 17.27L18.18 21l-1.64-7.03L22 9.24l-7.19-.61L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21z"/>
                            </svg>
                            <span class="text-sm font-medium">4.8/5</span>
                        </div>
                        <div class="text-sm text-gray-500">
                            <span class="font-medium text-gray-700">45</span> Products
                        </div>
                        <div class="text-sm text-gray-500">
                            <span class="font-medium text-gray-700">8</span> Years
                        </div>
                    </div>
                </div>

                <!-- Action Buttons -->
                <div class="flex flex-col space-y-2 mt-4 md:mt-0">
                    <a asp-page="/Factories/Details" asp-route-id="@Model.Match.FactoryId"
                       class="btn btn-sm btn-outline-primary whitespace-nowrap flex items-center justify-center">
                        <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 mr-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14" />
                        </svg>
                        View Factory
                    </a>
                    <button type="button"
                            class="btn btn-sm btn-light flex items-center justify-center"
                            onclick="saveFactory('@Model.Match.FactoryId')">
                        <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 mr-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 5a2 2 0 012-2h10a2 2 0 012 2v16l-7-3.5L5 21V5z" />
                        </svg>
                        Save
                    </button>
                    <button type="button"
                            class="btn btn-sm btn-light flex items-center justify-center"
                            onclick="contactFactory('@Model.Match.FactoryId')">
                        <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 mr-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z" />
                        </svg>
                        Contact
                    </button>
                </div>
            </div>

            <!-- Factory Badges & Certifications (new section) -->
            <div class="px-6 py-3 bg-gray-50 border-t flex flex-wrap gap-2">
            <span class="inline-flex items-center px-2 py-1 bg-green-100 text-green-800 text-xs rounded">
                <svg class="w-3 h-3 mr-1" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">
                    <path fill-rule="evenodd" d="M6.267 3.455a3.066 3.066 0 001.745-.723 3.066 3.066 0 013.976 0 3.066 3.066 0 001.745.723 3.066 3.066 0 012.812 2.812c.051.643.304 1.254.723 1.745a3.066 3.066 0 010 3.976 3.066 3.066 0 00-.723 1.745 3.066 3.066 0 01-2.812 2.812 3.066 3.066 0 00-1.745.723 3.066 3.066 0 01-3.976 0 3.066 3.066 0 00-1.745-.723 3.066 3.066 0 01-2.812-2.812 3.066 3.066 0 00-.723-1.745 3.066 3.066 0 010-3.976 3.066 3.066 0 00.723-1.745 3.066 3.066 0 012.812-2.812zm7.44 5.252a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd"></path>
                </svg>
                Certified
            </span>
                <span class="inline-flex items-center px-2 py-1 bg-blue-100 text-blue-800 text-xs rounded">ISO 9001</span>
                <span class="inline-flex items-center px-2 py-1 bg-purple-100 text-purple-800 text-xs rounded">Eco-Friendly</span>
                <span class="inline-flex items-center px-2 py-1 bg-orange-100 text-orange-800 text-xs rounded">Fast Delivery</span>
            </div>
        </div>
    </div>

    <!-- Enhanced Customer Reviews -->
    <div class="mt-12">
        <h3 class="text-xl font-bold mb-6">Customer Reviews</h3>
        @if (Model.Match.Feedbacks.Any())
        {
        @foreach (var feedback in Model.Match.Feedbacks)
        {
        <div class="mb-6 p-4 border rounded-lg shadow-sm bg-white">
            <div class="flex items-center mb-2">
                <div class="mr-3">
                    <img src="@feedback.ProductImage" alt="@feedback.CustomerName" class="w-12 h-12 rounded-full border-2 border-gray-200">
                </div>
                <div>
                    <h5 class="font-medium">@feedback.CustomerName</h5>
                    <div class="text-yellow-500 flex">
                        @for (int i = 0; i < feedback.Rating; i++)
                        {
                        <svg xmlns="http://www.w3.org/2000/svg" fill="currentColor" class="w-5 h-5" viewBox="0 0 20 20"><path d="M10 15.27l6.18 3.73-1.64-7.03 5.45-4.73-7.19-.61L10 0 8.2 7.63l-7.19.61 5.45 4.73-1.64 7.03L10 15.27z"></path></svg>
                        }
                    </div>
                </div>
            </div>
            <p class="text-gray-600">@feedback.Comment</p>
        </div>
        }
        }
        else
        {
        <div class="text-gray-500 text-center p-4 border rounded-lg bg-gray-50">
            No customer reviews yet. Be the first to leave feedback!
        </div>
        }
    </div>
    }
</div>

@section Scripts {
    <script>
    function decrementQuantity() {
        const input = document.getElementById('quantity');
        const currentValue = parseInt(input.value);
        if (currentValue > 1) {
            input.value = currentValue - 1;
        }
    }

    function incrementQuantity() {
        const input = document.getElementById('quantity');
        const currentValue = parseInt(input.value);
        const maxValue = parseInt(input.getAttribute('max'));
        if (currentValue < maxValue) {
            input.value = currentValue + 1;
        }
    }

    function saveFactory(factoryId) {
        // Add your save factory logic here
        console.log(`Saving factory ${factoryId}`);
        // Show toast notification
        showToast('Factory saved to your favorites');
    }

    function contactFactory(factoryId) {
        // Add your contact factory logic here
        console.log(`Contacting factory ${factoryId}`);
        // You could open a modal dialog or redirect to a contact form
    }

    function showToast(message) {
        // Create toast element
        const toast = document.createElement('div');
        toast.className = 'fixed bottom-4 right-4 bg-gray-800 text-white px-4 py-2 rounded-lg shadow-lg transform transition-all duration-500 translate-y-20 opacity-0';
        toast.textContent = message;
        document.body.appendChild(toast);

        // Show toast with animation
        setTimeout(() => {
            toast.classList.remove('translate-y-20', 'opacity-0');
        }, 10);

        // Hide and remove toast after delay
        setTimeout(() => {
            toast.classList.add('translate-y-20', 'opacity-0');
            setTimeout(() => {
                document.body.removeChild(toast);
            }, 500);
        }, 3000);
    }
</script>
}
